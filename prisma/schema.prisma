// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Example models
// https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch-typescript-postgres#create-database-tables-with-prisma-migrate

/////////////////////////////////////////////////////////////
// module InterviewProspect

model InterviewProspect {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(300)
  fieldArea String
  message   String?  @db.Text()
  email     String?  @db.VarChar(255)
  whatsapp  String?  @db.VarChar(20)
  // published Boolean  @default(false)
  // author    User     @relation(fields: [authorId], references: [id])
  // authorId  Int
}

////////////////////////////////////////////////////////////
// module Authorization

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  gender String?
  city String?
  country String?
  birthday DateTime?
  thumbnail String?
  facebookId String?
  googleId String?
}

////////////////////////////////////////////////////////////
// module Pool

model Pool {
  id Int @id @default(autoincrement())
  slug String @unique
  title String
  description String?
  poolStatus Int @default(0) // 0)draft; 1)open_to_vote; 2)finished
  options PoolOption[] @relation()
  answers PoolAnswer[] @relation()
  createdAt DateTime @default(now())
}

model PoolOption {
  id Int @id @default(autoincrement())
  pool Pool @relation(fields: [poolId], references: [id])
  poolId Int
  image String?
  label String
  value String?
  votes Int @default(0)
}

model PoolAnswer {
  id Int @id @default(autoincrement())
  pool Pool @relation(fields: [poolId], references: [id])
  poolId Int
  userId Int
  poolOptionId Int
}
